{
  "paragraphs": [
    {
      "text": "%md ## 评价类数据点击ugc占比,非ugc点击站点分布，医疗和非医疗占比",
      "dateUpdated": "Jul 12, 2018 4:53:06 PM",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003e采样评价和选择问答案分类准确率\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531279920308_1345551656",
      "id": "20180426-125946_729598550",
      "dateCreated": "Jul 11, 2018 11:32:00 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": " def removeCbrackets(line : String) : String \u003d {\r\n    try {\r\n      return  line replaceAll (\"\u003c.*?\u003e\", \"\")\r\n    }\r\n    catch {\r\n      case ex: Exception \u003d\u003e \"\"\r\n    }\r\n  }\r\n\r\n  \r\n  def removePunc(line : String) : String \u003d {\r\n    try {\r\n      return  line replaceAll (\"[\\\\s+\\\\.\\\\!\\\\/_,，。？\\\\$%\\\\^\\\\*\\\\\\\"\\\u0027+｀｀`\\\\｀·——《》｀()?【】:：;～；;“”！，。？、~@#￥%……\u0026*（）]+\", \"\")\r\n    }\r\n    catch {\r\n      case ex: Exception \u003d\u003e \"\"\r\n    }\r\n  }\r\n\r\n  def hash(s:String)\u003d{\r\n    val m \u003d java.security.MessageDigest.getInstance(\"MD5\")\r\n    val b \u003d s.getBytes(\"UTF-8\")\r\n    m.update(b,0,b.length)\r\n    new java.math.BigInteger(1,m.digest()).toString(16).trim()\r\n  }\r\n  \r\n  val queryHash \u003d (s: String) \u003d\u003e{\r\n    var ask \u003d s.trim()\r\n    ask \u003d removeCbrackets(ask)\r\n    ask \u003d removePunc(ask)\r\n    var ID \u003d hash(ask)\r\n    ID\r\n  }\r\n  \r\n \r\n  def lineToQHType(line : String)\u003d {\r\n\r\n    val regex \u003d \"@[A-Za-z._]{1,30}:\".r\r\n    val tags \u003d regex findAllIn line toArray\r\n    val contents \u003d line.split(\"@[A-Za-z._]{1,30}:\",-1)\r\n   \r\n    var htype \u003d \"\"\r\n    var ask \u003d \"\"\r\n    var mainAns \u003d \"\"\r\n    var ID \u003d \"\"\r\n    var ask2\u003d\"\"\r\n    try{\r\n      for(i\u003c-0 until tags.length){\r\n        var tag \u003d tags(i)\r\n        var content \u003d contents(i+1)\r\n     \r\n        if(tag\u003d\u003d\"@ASK.HTYPE:\"){\r\n          htype \u003d content.trim()\r\n        }\r\n        else if(tag\u003d\u003d\"@GROUP.EXT:\"){\r\n          ask \u003d content.trim()\r\n        } else if(tag\u003d\u003d\"@ANS.MAIN_ANS:\"){\r\n          mainAns \u003d content.trim()\r\n        //   ask \u003d queryhash(ask)\r\n        }else if(tag\u003d\u003d\"@ASK.TITLE:\"){\r\n          ask2 \u003d content.trim()\r\n          ask2 \u003d removeCbrackets(ask2)\r\n          ask2 \u003d removePunc(ask2)\r\n          ID \u003d hash(ask2)\r\n        }\r\n\r\n        //     M +\u003d (tag -\u003e content)\r\n      }\r\n    }catch{\r\n      case e: Exception \u003d\u003e {\r\n        ask \u003d \"\"\r\n        htype \u003d \"\"\r\n        mainAns \u003d \"\"\r\n        ID \u003d \"\"\r\n      }\r\n    }\r\n    (ask,ID,htype,mainAns)\r\n  }\r\n  \r\n  \r\n  def lineToM(l : String)\u003d {\r\n    var line \u003d l\r\n    if(line.startsWith(\"\\\"\")\u0026\u0026line.endsWith(\"\\\"\")){\r\n      line \u003d line.substring(1,line.length-1)\r\n    }\r\n    val regex \u003d \"@[A-Za-z._]{1,30}:\".r\r\n    val tags \u003d regex findAllIn line toArray\r\n    val contents \u003d line.split(\"@[A-Za-z._]{1,30}:\",-1)\r\n    \r\n    var M:Map[String,String] \u003d Map()\r\n    \r\n    for(i\u003c-0 until tags.length){\r\n      var tag \u003d tags(i)\r\n      var content \u003d contents(i+1)\r\n      M +\u003d (tag -\u003e content.trim())\r\n    }\r\n    M\r\n  }\r\n  \r\n   ",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:36:35 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "removeCbrackets: (line: String)String\nremovePunc: (line: String)String\nhash: (s: String)String\nqueryHash: String \u003d\u003e String \u003d \u003cfunction1\u003e\nwarning: there was one feature warning; re-run with -feature for details\nlineToQHType: (line: String)(String, String, String, String)\nwarning: there was one feature warning; re-run with -feature for details\nlineToM: (l: String)Map[String,String]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531279920310_1346321154",
      "id": "20180425-182839_1949268193",
      "dateCreated": "Jul 11, 2018 11:32:00 AM",
      "dateStarted": "Jul 12, 2018 5:36:35 PM",
      "dateFinished": "Jul 12, 2018 5:36:37 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.net.{URLDecoder, URLEncoder}\r\nimport java.text.SimpleDateFormat\r\nimport java.util.Date\r\n\r\ncase class Logrow(userid:String,uuid:String, page:String, time : String, search_type : String, query : String,urls:List[Map[String,String]])\r\ncase class DFrow(query: String,clk_ugc:Int,clk_o:Int)\r\n\r\n\r\ndef DateFormat(time:String):String\u003d{\r\n    var sdf:SimpleDateFormat \u003d new SimpleDateFormat(\"yyyyMMdd\")\r\n    var date:String \u003d sdf.format(new Date((time.toLong*1000)))\r\n    return date\r\n}\r\n\r\ndef decode(value:String): String \u003d URLDecoder.decode(value, \"gbk\")\r\n\r\ndef getRow(line : String):Option[Logrow]\u003d {\r\n    //    var userid, uuid, page, time, search_type \u003d \"\"\r\n    val regex\u003d\"\"\"^\\d+$\"\"\".r\r\n    var userid, uuid, page,time,search_type,unknown \u003d \"\"\r\n    var tmp \u003d line.trim().split(\u0027\\t\u0027)\r\n    if (tmp.length \u003c 2) {\r\n      return None\r\n    }\r\n    var tmp0 \u003d tmp(0).trim().split(\u0027#\u0027)\r\n    if (tmp0.length !\u003d 5 \u0026\u0026 tmp0.length !\u003d 6) {\r\n      return None\r\n    }\r\n    if(tmp0.length \u003d\u003d 5){\r\n      userid \u003d tmp0(0)\r\n      uuid \u003d tmp0(1)\r\n      page \u003d tmp0(2)\r\n      time \u003d tmp0(3)\r\n      search_type \u003d tmp0(4)\r\n    }else if(tmp0.length \u003d\u003d 6){\r\n      userid \u003d tmp0(0)\r\n      uuid \u003d tmp0(1)\r\n      page \u003d tmp0(2)\r\n      time \u003d tmp0(3)\r\n      search_type \u003d tmp0(4)\r\n      unknown \u003d tmp0(5)\r\n    }\r\n    var query \u003d decode(tmp(1))\r\n    var urls:List[Map[String,String]] \u003d List()\r\n    var urlblock:Map[String,String]\u003d Map()\r\n    var cnt \u003d 0\r\n    for(i \u003c- 2 to tmp.length-1){\r\n      //      println(tmp(i))\r\n      //      println(tmp(i).trim().split(\"#\",-1).length)\r\n      if (((tmp(i).trim().split(\"#\",-1).length) \u003e\u003d 4) \u0026\u0026 regex.findFirstMatchIn((tmp(i).trim().split(\"#\",-1)(1))) !\u003d None){\r\n        var tmp_i \u003d tmp(i).trim().split(\"#\",-1)\r\n        if(tmp_i.length !\u003d 4){\r\n          tmp_i \u003d Array(\"\",\"\",\"\",\"\")\r\n        }\r\n        var Array(vrid, ph_3_1, ph_3_2, baseurl) \u003d tmp_i\r\n        baseurl \u003d decode(baseurl)\r\n        urlblock +\u003d (\"vrid\" -\u003e vrid)\r\n        urlblock +\u003d (\"3_1\" -\u003e ph_3_1)\r\n        urlblock +\u003d (\"3_2\" -\u003e ph_3_2)\r\n        urlblock +\u003d (\"baseurl\" -\u003e baseurl)\r\n        urls \u003d urls :+ urlblock\r\n        urlblock \u003d Map()\r\n        cnt \u003d 0\r\n      }else{\r\n        if(cnt\u003d\u003d0){\r\n          urlblock +\u003d (\"wapurl\" -\u003e tmp(i))\r\n          cnt \u003d cnt+1\r\n        }else if(cnt\u003d\u003d1){\r\n          urlblock +\u003d (\"clk\" -\u003e tmp(i))\r\n          cnt \u003d cnt+1\r\n        }else if(cnt\u003d\u003d2){\r\n          urlblock +\u003d (\"2\" -\u003e tmp(i))\r\n          cnt \u003d cnt+1\r\n        }\r\n      }\r\n    }\r\n    return Some(new Logrow(userid, uuid, page, time, search_type, query, urls))\r\n  }\r\n\r\ndef trans_dataframe(row:Logrow)\u003d{\r\n  var query \u003d row.query\r\n  var clk_o \u003d 0\r\n  var clk_ugc \u003d 0\r\n  for (i \u003c- 0 to row.urls.length - 1) {\r\n    var urlblock \u003d row.urls(i)\r\n    if(urlblock.get(\"vrid\").get.toString \u003d\u003d \"50022601\"){\r\n        clk_ugc +\u003d urlblock.get(\"clk\").getOrElse(\"0\").toInt\r\n    }else{\r\n        clk_o +\u003d urlblock.get(\"clk\").getOrElse(\"0\").toInt\r\n    }\r\n  }\r\n  if(clk_o\u003e0){\r\n      clk_o\u003d1\r\n  }\r\n  (query,clk_ugc,clk_o)\r\n}\r\n\r\ndef filterNone(x: Option[Logrow]) \u003d x match {\r\n      case Some(s) \u003d\u003e true\r\n      case None \u003d\u003e false\r\n    }\r\n\r\n   ",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 3:33:15 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import java.net.{URLDecoder, URLEncoder}\nimport java.text.SimpleDateFormat\nimport java.util.Date\ndefined class Logrow\ndefined class DFrow\nDateFormat: (time: String)String\ndecode: (value: String)String\ngetRow: (line: String)Option[Logrow]\ntrans_dataframe: (row: Logrow)(String, Int, Int)\nfilterNone: (x: Option[Logrow])Boolean\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531308195846_363240400",
      "id": "20180711-192315_1651061954",
      "dateCreated": "Jul 11, 2018 7:23:15 PM",
      "dateStarted": "Jul 12, 2018 11:30:26 AM",
      "dateFinished": "Jul 12, 2018 11:31:26 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "case class Row_qtype(ask:String,ID:String,htype:String,mainAns:String)",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:11:24 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "defined class Row_qtype\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531294214952_1280645787",
      "id": "20180711-153014_88717447",
      "dateCreated": "Jul 11, 2018 3:30:14 PM",
      "dateStarted": "Jul 12, 2018 5:11:24 PM",
      "dateFinished": "Jul 12, 2018 5:11:24 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sc.hadoopConfiguration.set(\"textinputformat.record.delimiter\",\"\\n@\\n\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:12:30 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1531279920311_1345936405",
      "id": "20180425-183016_747307062",
      "dateCreated": "Jul 11, 2018 11:32:00 AM",
      "dateStarted": "Jul 12, 2018 9:12:30 PM",
      "dateFinished": "Jul 12, 2018 9:12:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var  allpcv_anscls \u003d sc.textFile(\"hdfs://master004.diablo.hadoop.nm.ted:8020//user/webkm/xuen/lizhi_temp/score_data\")\r\nallpcv_anscls.count()\r\n",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 4:05:18 PM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "allpcv_anscls: org.apache.spark.rdd.RDD[String] \u003d hdfs://master004.diablo.hadoop.nm.ted:8020//user/webkm/xuen/lizhi_temp/score_data MapPartitionsRDD[63] at textFile at \u003cconsole\u003e:30\nres32: Long \u003d 12797914\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531279920312_1344012661",
      "id": "20180425-183022_741419641",
      "dateCreated": "Jul 11, 2018 11:32:00 AM",
      "dateStarted": "Jul 12, 2018 4:05:18 PM",
      "dateFinished": "Jul 12, 2018 4:05:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var tq \u003d allpcv_anscls.map(m \u003d\u003elineToQHType(m)).map(m\u003d\u003eRow_qtype(m._1,m._2,m._3)).toDF()\ntq \u003d tq.distinct\ntq.show(5)\nprintln(tq.count())",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 4:06:03 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "tq: org.apache.spark.sql.DataFrame \u003d [ask: string, htype: string]\ntq: org.apache.spark.sql.DataFrame \u003d [ask: string, htype: string]\n+---------------+-----+\n|            ask|htype|\n+---------------+-----+\n|韩庚和希澈配好还是和始源配好?|  ALT|\n|    电钢琴代替钢琴，行吗？|  YON|\n|qq三国一小时能点亮图标可以吗|  YON|\n|       初恋是否刻骨铭心|  YON|\n|     顺产会影响夫妻生活吗|  YON|\n+---------------+-----+\nonly showing top 5 rows\n\n1034223\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531294350555_-2079042382",
      "id": "20180711-153230_2127915842",
      "dateCreated": "Jul 11, 2018 3:32:30 PM",
      "dateStarted": "Jul 11, 2018 3:44:32 PM",
      "dateFinished": "Jul 11, 2018 3:46:27 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var  allpcv_anscls \u003d sc.textFile(\"hdfs://master004.diablo.hadoop.nm.ted:8020//user/webkm/xuen/lizhi_temp/score_data\")\nvar tq \u003d allpcv_anscls.map(m \u003d\u003elineToQHType(m)).map(m\u003d\u003eRow_qtype(m._1,m._2,m._3,m._4)).toDF()\nvar tq_drop \u003d tq.dropDuplicates(Seq(\"ask\"))\ntq_drop.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:13:15 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "allpcv_anscls: org.apache.spark.rdd.RDD[String] \u003d hdfs://master004.diablo.hadoop.nm.ted:8020//user/webkm/xuen/lizhi_temp/score_data MapPartitionsRDD[371] at textFile at \u003cconsole\u003e:30\ntq: org.apache.spark.sql.DataFrame \u003d [ask: string, ID: string ... 2 more fields]\ntq_drop: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [ask: string, ID: string ... 2 more fields]\nres162: Long \u003d 1030023\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531295624170_-614083847",
      "id": "20180711-155344_1733394335",
      "dateCreated": "Jul 11, 2018 3:53:44 PM",
      "dateStarted": "Jul 12, 2018 9:13:15 PM",
      "dateFinished": "Jul 12, 2018 9:14:22 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "tq_drop.registerTempTable(\"t_tq_drop\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:17:42 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1531401454935_1580798160",
      "id": "20180712-211734_1110045913",
      "dateCreated": "Jul 12, 2018 9:17:34 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var  allpcv_anscls \u003d sc.textFile(\"hdfs://master004.diablo.hadoop.nm.ted:8020//user/webkm/xuen/lizhi_temp/score_data\")\nvar tq \u003d allpcv_anscls.map(m \u003d\u003elineToQHType(m)).map(m\u003d\u003eRow_qtype(m._1,m._2,m._3,m._4)).toDF()\nvar tq_drop \u003d tq.dropDuplicates(Seq(\"ask\",\"ID\"))",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:15:06 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "allpcv_anscls: org.apache.spark.rdd.RDD[String] \u003d hdfs://master004.diablo.hadoop.nm.ted:8020//user/webkm/xuen/lizhi_temp/score_data MapPartitionsRDD[180] at textFile at \u003cconsole\u003e:30\ntq: org.apache.spark.sql.DataFrame \u003d [ask: string, ID: string ... 2 more fields]\ntq_drop: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [ask: string, ID: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531386636572_-1928767018",
      "id": "20180712-171036_1149638540",
      "dateCreated": "Jul 12, 2018 5:10:36 PM",
      "dateStarted": "Jul 12, 2018 5:15:06 PM",
      "dateFinished": "Jul 12, 2018 5:15:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "tq_drop.registerTempTable(\"t_tq_drop\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:16:46 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531296003878_-1419594803",
      "id": "20180711-160003_1809691435",
      "dateCreated": "Jul 11, 2018 4:00:03 PM",
      "dateStarted": "Jul 12, 2018 9:16:46 PM",
      "dateFinished": "Jul 12, 2018 9:19:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "tq_drop.show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:15:19 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------------------+-----+-----------------+\n|                 ask|                  ID|htype|          mainAns|\n+--------------------+--------------------+-----+-----------------+\n|!!羞愧...酒后+害羞会不会导致...|15bef5915b5e175a5...|  YON|               会的|\n|!如果吃奶粉的话,里面加入葡萄糖可...|a4d6372df9868cd38...|  YON|可以的||可以和牛奶放在一起服用的|\n| !美版 有锁 能直接升级ios 7么。|5fb8607ed600dfc8a...|  YON|               不是|\n|          \"\\0\"是合法常量吗|77be4cd990e17e4e1...|  YON|      加双引号的是合法的常量|\n|\"baidu\"和\"google\"哪...|82a8355e16b089bb8...|  ALT|                 |\n|\"一起来看流星雨”和“流星花园”哪...|7883a37490b96b493...|  ALT|        当然是||流星花园|\n|        \"三千万光棍\"是真的吗？|2699658d984ca890c...|  YON|                是|\n|   \"不干不净吃了没病\"有科学道理吗?|abe15b2b4ddffa90f...|  YON|              当然啊|\n|         \"全体老师”是不是集合|6ea3ca6b3cc3a2bc2...|  YON|                是|\n|    \"卍\"和\"卐\"那个才是死神的符号|2e5e0901794328471...|  ALT|                 |\n|        \"友谊\"两个字能相信吗?|43b7f8555c6052060...|  YON|             可以相信|\n|\"叛逆的鲁路修\"和\"新时空要塞\"哪...|b99d493a562725198...|  ALT|                 |\n|       \"可爱”是没有男女之分吗？|63234eff9df340ca0...|  YON|               是的|\n|    \"向上吧！少年\"00后能参加吗？|77b4cf2896d070ea5...|  YON| 可以啊||90后||00后都可以|\n|    \"唯一\"的装备能ROLL2个吗?|5149a54d2ab5d55ff...|  YON|               不能|\n| \"外星人\"罗纳尔多还能重返绿茵赛场吗?|c0518957f255a7a55...|  YON|            一般不能了|\n|    \"女朋友和母亲落河先救谁?\"之二|872825d29d710a4e2...|  ALT|                 |\n|\"好勇斗狠\" 和 \"禁欲修行\" 哪...|3413500db5c599df6...|  ALT|                 |\n|      \"好色\"是每个男孩的本性吗？|52b0d6a7381cb4c70...|  YON|               是啊|\n|         \"宫2年终能拍摄完吗\"|c79a516dce15c169c...|  YON|             估计不行|\n+--------------------+--------------------+-----+-----------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531386753031_-343031266",
      "id": "20180712-171233_1509724943",
      "dateCreated": "Jul 12, 2018 5:12:33 PM",
      "dateStarted": "Jul 12, 2018 5:15:19 PM",
      "dateFinished": "Jul 12, 2018 5:16:28 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var sql_result3 \u003d sqlContext.sql(\"SELECT htype,count(*) FROM t_tq_drop group by htype\")\nsql_result3.show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:14:46 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sql_result3: org.apache.spark.sql.DataFrame \u003d [htype: string, count(1): bigint]\n+-----+--------+\n|htype|count(1)|\n+-----+--------+\n|  YON|  838816|\n|  ALT|  186555|\n| EVAL|    4652|\n+-----+--------+\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531296123818_420426035",
      "id": "20180711-160203_1583123059",
      "dateCreated": "Jul 11, 2018 4:02:03 PM",
      "dateStarted": "Jul 12, 2018 9:14:46 PM",
      "dateFinished": "Jul 12, 2018 9:16:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "tq_drop.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:17:27 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res69: Long \u003d 2153637\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531387043948_537687970",
      "id": "20180712-171723_783858667",
      "dateCreated": "Jul 12, 2018 5:17:23 PM",
      "dateStarted": "Jul 12, 2018 5:17:27 PM",
      "dateFinished": "Jul 12, 2018 5:18:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sc.hadoopConfiguration.set(\"textinputformat.record.delimiter\",\"\\n\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:15:19 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1531387232330_-2111263879",
      "id": "20180712-172032_462290675",
      "dateCreated": "Jul 12, 2018 5:20:32 PM",
      "dateStarted": "Jul 12, 2018 9:15:19 PM",
      "dateFinished": "Jul 12, 2018 9:16:06 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val inputPath \u003d \"/user/webrank/clicklog/ms/201807/*\"\nprintln(inputPath)\nvar lograw \u003d sc.textFile(inputPath)\nlograw.cache()\nlograw.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:16:06 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "inputPath: String \u003d /user/webrank/clicklog/ms/201807/*\n/user/webrank/clicklog/ms/201807/*\nlograw: org.apache.spark.rdd.RDD[String] \u003d /user/webrank/clicklog/ms/201807/* MapPartitionsRDD[399] at textFile at \u003cconsole\u003e:32\nres168: org.apache.spark.rdd.RDD[String] \u003d /user/webrank/clicklog/ms/201807/* MapPartitionsRDD[399] at textFile at \u003cconsole\u003e:32\nres169: Long \u003d 3932834772\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531401338669_1707949187",
      "id": "20180712-211538_1919452188",
      "dateCreated": "Jul 12, 2018 9:15:38 PM",
      "dateStarted": "Jul 12, 2018 9:16:06 PM",
      "dateFinished": "Jul 12, 2018 9:19:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var result \u003d lograw.map(x\u003d\u003egetRow(x)).filter(filterNone).map(x\u003d\u003ex.get).map(trans_dataframe).map(r \u003d\u003e DFrow(r._1,r._2.toInt,r._3.toInt)).toDF()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:19:45 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "result: org.apache.spark.sql.DataFrame \u003d [query: string, clk_ugc: int ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531401582066_1086916845",
      "id": "20180712-211942_1886380267",
      "dateCreated": "Jul 12, 2018 9:19:42 PM",
      "dateStarted": "Jul 12, 2018 9:19:45 PM",
      "dateFinished": "Jul 12, 2018 9:19:45 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "result.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:19:58 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res171: Long \u003d 3932834772\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531401591248_-871455057",
      "id": "20180712-211951_1165600",
      "dateCreated": "Jul 12, 2018 9:19:51 PM",
      "dateStarted": "Jul 12, 2018 9:19:58 PM",
      "dateFinished": "Jul 12, 2018 9:30:34 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "result.cache()\n",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:34:30 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res176: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [query: string, clk_ugc: int ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531401772452_-772530261",
      "id": "20180712-212252_761803042",
      "dateCreated": "Jul 12, 2018 9:22:52 PM",
      "dateStarted": "Jul 12, 2018 9:34:30 PM",
      "dateFinished": "Jul 12, 2018 9:34:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "\nval inputPath \u003d \"/user/webrank/clicklog/ms/201807/*\"\nprintln(inputPath)\nvar lograw \u003d sc.textFile(inputPath)\nvar result \u003d lograw.map(x\u003d\u003egetRow(x)).filter(filterNone).map(x\u003d\u003ex.get).map(trans_dataframe).map(r \u003d\u003e DFrow(r._1,r._2.toInt,r._3.toInt)).toDF()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:20:27 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "inputPath: String \u003d /user/webrank/clicklog/ms/201807/*\n/user/webrank/clicklog/ms/201807/*\nlograw: org.apache.spark.rdd.RDD[String] \u003d /user/webrank/clicklog/ms/201807/* MapPartitionsRDD[43] at textFile at \u003cconsole\u003e:32\nresult: org.apache.spark.sql.DataFrame \u003d [query: string, clk_ugc: int ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531308190527_-100012600",
      "id": "20180711-192310_44586712",
      "dateCreated": "Jul 11, 2018 7:23:10 PM",
      "dateStarted": "Jul 12, 2018 3:36:21 PM",
      "dateFinished": "Jul 12, 2018 3:36:22 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "result.show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 11:38:31 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----------------+-------+-----+\n|           query|clk_ugc|clk_o|\n+----------------+-------+-----+\n|          网游小说系列|      0|    0|\n| 彩票大赢家裙.722333不错|      0|    0|\n|           超次元帝国|      0|    0|\n|对不起你拨打的用户通话已经被限制|      0|    1|\n|          Mirage|      0|    1|\n|           搜狗输入法|      0|    0|\n|              扶摇|      0|    1|\n|      2018俄罗斯世界杯|      0|    0|\n|      Nikki Sexx|      0|    0|\n|              银临|      0|    1|\n|          渝北天气预报|      0|    1|\n|         冰箱冷藏室流水|      0|    1|\n|              天气|      0|    0|\n|            杀神叶欢|      0|    0|\n|   Holly Halston|      0|    0|\n|       樱花牌36色油画棒|      0|    0|\n|           世界杯直播|      0|    0|\n|       时空猎人礼包168|      0|    0|\n|       女人出轨最好的证据|      0|    1|\n|     平安京万年竹1技能暴击|      0|    1|\n+----------------+-------+-----+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531366519551_-448070031",
      "id": "20180712-113519_1873369492",
      "dateCreated": "Jul 12, 2018 11:35:19 AM",
      "dateStarted": "Jul 12, 2018 11:38:31 AM",
      "dateFinished": "Jul 12, 2018 11:38:40 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "result.registerTempTable(\"t_log\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:34:48 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531366594906_1188575169",
      "id": "20180712-113634_95412830",
      "dateCreated": "Jul 12, 2018 11:36:34 AM",
      "dateStarted": "Jul 12, 2018 9:34:48 PM",
      "dateFinished": "Jul 12, 2018 9:34:49 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var sql_result \u003d sqlContext.sql(\"SELECT query,sum(clk_ugc) as clk_ugc,sum(clk_o) as clk_o FROM t_log group by query\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:35:04 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sql_result: org.apache.spark.sql.DataFrame \u003d [query: string, clk_ugc: bigint ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531380838013_-224587660",
      "id": "20180712-153358_930919156",
      "dateCreated": "Jul 12, 2018 3:33:58 PM",
      "dateStarted": "Jul 12, 2018 9:35:04 PM",
      "dateFinished": "Jul 12, 2018 9:35:04 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.cache()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:35:22 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res178: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [query: string, clk_ugc: bigint ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531402517256_717904900",
      "id": "20180712-213517_1298043777",
      "dateCreated": "Jul 12, 2018 9:35:17 PM",
      "dateStarted": "Jul 12, 2018 9:35:22 PM",
      "dateFinished": "Jul 12, 2018 9:46:26 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:35:42 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res179: Long \u003d 668117210\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531402536111_558046927",
      "id": "20180712-213536_538798950",
      "dateCreated": "Jul 12, 2018 9:35:36 PM",
      "dateStarted": "Jul 12, 2018 9:35:42 PM",
      "dateFinished": "Jul 12, 2018 9:47:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.where(\"query \u003d\u003d \u0027阳光保险好吗\u0027\").show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 9:55:49 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------+-------+-----+\n| query|clk_ugc|clk_o|\n+------+-------+-----+\n|阳光保险好吗|      3|   17|\n+------+-------+-----+\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531402588493_-276980780",
      "id": "20180712-213628_1606399633",
      "dateCreated": "Jul 12, 2018 9:36:28 PM",
      "dateStarted": "Jul 12, 2018 9:55:49 PM",
      "dateFinished": "Jul 12, 2018 9:55:54 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.registerTempTable(\"t_log\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 4:20:17 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531383358196_1398316017",
      "id": "20180712-161558_1096988005",
      "dateCreated": "Jul 12, 2018 4:15:58 PM",
      "dateStarted": "Jul 12, 2018 4:20:17 PM",
      "dateFinished": "Jul 12, 2018 4:20:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.write.format(\"parquet\").save(\"/user/webrank/liuqin/statistic/query_clk_ugc_clk_o_201807.parquet\") ",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 3:54:13 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "org.apache.spark.SparkException: Job aborted.\n  at org.apache.spark.sql.execution.datasources.FileFormatWriter$$anonfun$write$1.apply$mcV$sp(FileFormatWriter.scala:215)\n  at org.apache.spark.sql.execution.datasources.FileFormatWriter$$anonfun$write$1.apply(FileFormatWriter.scala:173)\n  at org.apache.spark.sql.execution.datasources.FileFormatWriter$$anonfun$write$1.apply(FileFormatWriter.scala:173)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:65)\n  at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:173)\n  at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:145)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:58)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:56)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:74)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:117)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:117)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:138)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:135)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:116)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:92)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:92)\n  at org.apache.spark.sql.execution.datasources.DataSource.writeInFileFormat(DataSource.scala:438)\n  at org.apache.spark.sql.execution.datasources.DataSource.write(DataSource.scala:474)\n  at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:58)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:56)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:74)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:117)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:117)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:138)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:135)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:116)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:92)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:92)\n  at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:610)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:233)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:217)\n  ... 46 elided\nCaused by: org.apache.spark.SparkException: Job aborted due to stage failure: Task 96 in stage 17.0 failed 4 times, most recent failure: Lost task 96.3 in stage 17.0 (TID 10434, rsync.cloud1313.wd.s7.nm.ted, executor 835): java.io.InvalidClassException: org.apache.spark.internal.io.HadoopMapReduceCommitProtocol; local class incompatible: stream classdesc serialVersionUID \u003d 8531775026770993759, local class serialVersionUID \u003d -3240062154626659006\n\tat java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:616)\n\tat java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1843)\n\tat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1713)\n\tat java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1843)\n\tat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1713)\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2000)\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n\tat java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\n\tat java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:422)\n\tat org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:75)\n\tat org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:114)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:80)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:108)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\nDriver stacktrace:\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1499)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1487)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1486)\n  at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n  at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1486)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:814)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:814)\n  at scala.Option.foreach(Option.scala:257)\n  at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:814)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1714)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1669)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1658)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:630)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2022)\n  at org.apache.spark.sql.execution.datasources.FileFormatWriter$$anonfun$write$1.apply$mcV$sp(FileFormatWriter.scala:188)\n  ... 79 more\nCaused by: java.io.InvalidClassException: org.apache.spark.internal.io.HadoopMapReduceCommitProtocol; local class incompatible: stream classdesc serialVersionUID \u003d 8531775026770993759, local class serialVersionUID \u003d -3240062154626659006\n  at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:616)\n  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1843)\n  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1713)\n  at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1843)\n  at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1713)\n  at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2000)\n  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n  at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\n  at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\n  at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\n  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n  at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\n  at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\n  at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\n  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n  at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:2245)\n  at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:2169)\n  at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:2027)\n  at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1535)\n  at java.io.ObjectInputStream.readObject(ObjectInputStream.java:422)\n  at org.apache.spark.serializer.JavaDeserializationStream.readObject(JavaSerializer.scala:75)\n  at org.apache.spark.serializer.JavaSerializerInstance.deserialize(JavaSerializer.scala:114)\n  at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:80)\n  at org.apache.spark.scheduler.Task.run(Task.scala:108)\n  at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:335)\n  ... 3 more\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531381862009_1463942279",
      "id": "20180712-155102_1481518711",
      "dateCreated": "Jul 12, 2018 3:51:02 PM",
      "dateStarted": "Jul 12, 2018 3:54:13 PM",
      "dateFinished": "Jul 12, 2018 4:04:40 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 3:37:05 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------------+-------+-----+\n|             query|clk_ugc|clk_o|\n+------------------+-------+-----+\n|          声母1001声母|      0|    0|\n|               林中文|      0|   74|\n|             硒药有那些|      0|    0|\n|          伪君子是什么意思|      0|  121|\n|            鸡胸肉的做法|      0| 2141|\n|求：添砖加瓦的近义词或同义词有哪些?|      0|    8|\n|               自荐信|      0| 5230|\n|            英文骂人的话|      0|  339|\n| 手机软件如何把一个人p到另一张照片|      0|    1|\n|         重庆这些干部被通报|      0|   24|\n|        疱疹性咽峡炎几天痊愈|      0| 1734|\n|         梦见下雨是什么意思|      0| 1928|\n|               医保卡|      0| 5117|\n|         黯然销魂者唯别而已|      0|   10|\n|          会计模拟实训报告|      0|   49|\n|        星巴克星礼卡有什么用|      0|   51|\n|            塞尔维亚首都|      0|   86|\n|        上海到哈尔滨快递几天|      0|   22|\n|          蔚来汽车南通招聘|      0|    1|\n|               强奸门|      0|42780|\n+------------------+-------+-----+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531366593225_147059896",
      "id": "20180712-113633_1186120749",
      "dateCreated": "Jul 12, 2018 11:36:33 AM",
      "dateStarted": "Jul 12, 2018 3:37:05 PM",
      "dateFinished": "Jul 12, 2018 3:49:35 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var sql_result2 \u003d sqlContext.sql(\"SELECT * FROM t_tq_drop where htype\u003d\u0027EVAL\u0027\")\n",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:22:17 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sql_result2: org.apache.spark.sql.DataFrame \u003d [ask: string, ID: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531280433956_-201203508",
      "id": "20180711-114033_1550341324",
      "dateCreated": "Jul 11, 2018 11:40:33 AM",
      "dateStarted": "Jul 12, 2018 5:22:17 PM",
      "dateFinished": "Jul 12, 2018 5:22:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result2.registerTempTable(\"t_eval\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:22:21 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531383293526_1523066606",
      "id": "20180712-161453_1514451595",
      "dateCreated": "Jul 12, 2018 4:14:53 PM",
      "dateStarted": "Jul 12, 2018 5:22:21 PM",
      "dateFinished": "Jul 12, 2018 5:22:21 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result2.show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:22:24 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+-------------------+--------------------+-----+--------------+\n|                ask|                  ID|htype|       mainAns|\n+-------------------+--------------------+-----+--------------+\n|      +9龙鸣套带到60怎么样？|48bf395b45fb9aa9e...| EVAL|            可以|\n|            09春晚咋样？|11578003c9b81ebe5...| EVAL|       09春晚还可以|\n|             09春晚怎样|2061d28a4ed901e5f...| EVAL|          不是很好|\n|136、137开头的9位QQ号怎么样啊|18d37ae8e10dbba78...| EVAL|              |\n|           2010结婚好吗|1a7c24e33b174c204...| EVAL|              |\n|     2011年11月11结婚好吗|bdf100b90cd6e5ff4...| EVAL|           可以啊|\n|           2012到底如何|65aa349f3746d161c...| EVAL| 2012不会像电影的那样的|\n|           2012到底如何|ef8af35dd47c7c966...| EVAL|             有|\n|           210显卡怎么样|dedb0598abdb6908c...| EVAL|            是的|\n|          21金维他效果如何|8787355dbd81440a3...| EVAL|           有效果|\n|            23岁结婚好吗|6c0e525f156d728fe...| EVAL|     不会||正值好时光|\n|          263企业邮箱怎样|bf537565fe6fda682...| EVAL|不过一直闲置着||我们公司有|\n|           3230怎么样?|fbec699960e184812...| EVAL|              |\n|           3250好不好？|445958799573e4471...| EVAL|            不好|\n|           360保险箱怎样|3133b473293af40bf...| EVAL|            不行|\n|           360保险箱怎样|679fdbd6c36aa309a...| EVAL|         基本可以的|\n|           360保险箱怎样|ef3a93972efc5a4bc...| EVAL|              |\n|       360免费杀毒软件怎么样|786bbab965cc586cc...| EVAL|           可以啊|\n|            360好不好？|4d93a4e60f6b771b9...| EVAL|           基本是|\n|            360好不好？|64c857ab3456fa0e4...| EVAL|         肯定是可以|\n+-------------------+--------------------+-----+--------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531383870701_48734012",
      "id": "20180712-162430_1410424898",
      "dateCreated": "Jul 12, 2018 4:24:30 PM",
      "dateStarted": "Jul 12, 2018 5:22:24 PM",
      "dateFinished": "Jul 12, 2018 5:23:28 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sqlContext.udf.register(\"queryhashc\",queryHash)",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:36:46 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res144: org.apache.spark.sql.expressions.UserDefinedFunction \u003d UserDefinedFunction(\u003cfunction1\u003e,StringType,Some(List(StringType)))\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531387766147_-1619776425",
      "id": "20180712-172926_1822907985",
      "dateCreated": "Jul 12, 2018 5:29:26 PM",
      "dateStarted": "Jul 12, 2018 5:36:46 PM",
      "dateFinished": "Jul 12, 2018 5:36:47 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "var sql_result4 \u003d sqlContext.sql(\"SELECT ask,ID,mainAns,clk_ugc,clk_o FROM t_log join t_eval on t_eval.ID\u003dqueryhashc(t_log.query)\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:38:08 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sql_result4: org.apache.spark.sql.DataFrame \u003d [ask: string, ID: string ... 3 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531383856184_-1466053056",
      "id": "20180712-162416_948079545",
      "dateCreated": "Jul 12, 2018 4:24:16 PM",
      "dateStarted": "Jul 12, 2018 5:38:08 PM",
      "dateFinished": "Jul 12, 2018 5:38:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result4.registerTempTable(\"t_eval_j\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 6:10:15 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531384695496_-1427228475",
      "id": "20180712-163815_936994364",
      "dateCreated": "Jul 12, 2018 4:38:15 PM",
      "dateStarted": "Jul 12, 2018 6:10:15 PM",
      "dateFinished": "Jul 12, 2018 6:11:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result4.where(\"clk_ugc \u003e 0\").count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 4:42:39 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res42: Long \u003d 475\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531384731928_703172157",
      "id": "20180712-163851_1841725572",
      "dateCreated": "Jul 12, 2018 4:38:51 PM",
      "dateStarted": "Jul 12, 2018 4:42:39 PM",
      "dateFinished": "Jul 12, 2018 4:54:23 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result4.show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 5:38:19 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+------------+--------------------+--------------------+-------+-----+\n|         ask|                  ID|             mainAns|clk_ugc|clk_o|\n+------------+--------------------+--------------------+-------+-----+\n|       安徽怎么样|10b473e71f7d8c09b...|                    |      0|    4|\n|大连航运职业技术学院怎样|17a39817e9bcefca9...|                    |     20|   27|\n|     努比亚手机怎样|1a013587bc8ac6149...|长达20分钟的超长曝光时间的加入使...|      1|    0|\n|     za眼影怎么样|1bb5a67932da1a99f...|                    |      0|    0|\n|     苹果笔记本怎样|214f09741b5a4c720...|                 当然好|      1|    0|\n|    大学毕业当兵怎样|24cc6c6d1ef0e16f2...|                 可以啊|     47|  120|\n|      小红伞怎么样|2a9087961792d49ce...|                 可以啊|      0|    2|\n|       白羊座好吗|2aba2d4e1a0c2bacd...|               当然很好啊|      0|    2|\n|       白羊座好吗|2aba2d4e1a0c2bacd...|               当然很好啊|      0|    8|\n|    欧莱雅护肤品好吗|381d6d42d5ee43339...|             不错控水效果好|      0|    0|\n|    欧莱雅护肤品好吗|381d6d42d5ee43339...|             不错控水效果好|      0|    0|\n|    欧莱雅护肤品好吗|381d6d42d5ee43339...|             不错控水效果好|    354|  962|\n|      苹果系统怎样|3cf1d0c9e3cabab1d...|                 不好的|      7|    2|\n|  艾格金妍的产品怎么样|45f66b28ff9ce5cb4...|              我觉得挺好的|      0|    3|\n|       国庆套好吗|4ec41da9e0eebec7a...|            这回国庆套还可以|      1|    4|\n|     华唐手机怎么样|503e56d01ebac5775...|                不是很好|      0|    0|\n|       咋样呢？啊|527c69c0ef99968d5...|                    |      0|    3|\n|       咋样呢？啊|5b367a016772b7ae0...|                    |      0|    1|\n|       车怎么样?|5f6024dfb58bbede3...|                  好啊|      0|    0|\n|    梦幻西游天宫好吗|62a23de36f73e76f5...|                    |      0|    9|\n+------------+--------------------+--------------------+-------+-----+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531385035498_-1350002860",
      "id": "20180712-164355_1287546536",
      "dateCreated": "Jul 12, 2018 4:43:55 PM",
      "dateStarted": "Jul 12, 2018 5:38:19 PM",
      "dateFinished": "Jul 12, 2018 5:56:55 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result4.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 7:04:47 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res146: Long \u003d 9351\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531384061525_-2051565906",
      "id": "20180712-162741_1667804441",
      "dateCreated": "Jul 12, 2018 4:27:41 PM",
      "dateStarted": "Jul 12, 2018 5:39:58 PM",
      "dateFinished": "Jul 12, 2018 6:11:36 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result4.select(\"ask\").distinct.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 7:02:45 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res149: Long \u003d 3774\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531393355559_258600154",
      "id": "20180712-190235_1395179735",
      "dateCreated": "Jul 12, 2018 7:02:35 PM",
      "dateStarted": "Jul 12, 2018 7:02:45 PM",
      "dateFinished": "Jul 12, 2018 7:17:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result \u003d sqlContext.sql(\"SELECT ask,max(mainAns) as mainAns,sum(clk_ugc) as clk_ugc,sum(clk_o) as clk_o FROM t_eval_j group by ask\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 8:05:15 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sql_result: org.apache.spark.sql.DataFrame \u003d [ask: string, mainAns: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531393488835_-24758927",
      "id": "20180712-190448_911190403",
      "dateCreated": "Jul 12, 2018 7:04:48 PM",
      "dateStarted": "Jul 12, 2018 8:05:15 PM",
      "dateFinished": "Jul 12, 2018 8:05:16 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 7:20:08 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----------+---------------+-------+-----+\n|       ask|   max(mainAns)|clk_ugc|clk_o|\n+----------+---------------+-------+-----+\n|    1号店怎么样|       很不错的网上超市|      7|   14|\n| 2.0凯美瑞怎么样|     凯美瑞汽车还是挺好的|      0|    0|\n| 21金维他效果如何|            有效果|      0|    0|\n|2345浏览器怎么样|            挺好的|      3|   12|\n| 263企业邮箱怎样| 不过一直闲置着||我们公司有|      0|    0|\n|   360卫士好吗|   但是我觉得腾讯的更好一些|      0|    3|\n|   360好不好？|          肯定是可以|     10|   13|\n| 360安全卫士怎样|    用了好多年了觉得很不错|      4|    8|\n|360安全浏览器好吗|             很好|      1|    0|\n| 360手机卫士好么|            挺好的|      7|   14|\n|   360手机好吗|夏新大v还行啊||其它不怎么样|     20|   54|\n|   360手机怎样|         性价比很高的|      0| 1728|\n|   360杀毒好吗|             是啊|      1|    3|\n|360杀毒怎么样啊？|   很好啊||这个值得信赖的|      0|    0|\n| 360杀毒效果怎样|    感觉没什么实质上的用处|      1|    0|\n| 360杀毒软件怎样|         是的完全正确|      3|    9|\n|360极速浏览器好吗|    我觉得笔360浏览器好|      0|    0|\n|  360浏览器咋样|           可以的啊|      4|    5|\n| 360特供机好不好|               |      0|    0|\n|   360软件好吗|             可以|      0|    3|\n+----------+---------------+-------+-----+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531394403503_114802588",
      "id": "20180712-192003_746667831",
      "dateCreated": "Jul 12, 2018 7:20:03 PM",
      "dateStarted": "Jul 12, 2018 7:20:08 PM",
      "dateFinished": "Jul 12, 2018 7:36:42 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.cache()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 8:05:20 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res156: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [ask: string, mainAns: string ... 2 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531395814801_-463848843",
      "id": "20180712-194334_31862386",
      "dateCreated": "Jul 12, 2018 7:43:34 PM",
      "dateStarted": "Jul 12, 2018 8:05:20 PM",
      "dateFinished": "Jul 12, 2018 8:05:20 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 8:05:31 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res158: Long \u003d 3774\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531395824240_1479917924",
      "id": "20180712-194344_1522751886",
      "dateCreated": "Jul 12, 2018 7:43:44 PM",
      "dateStarted": "Jul 12, 2018 8:05:31 PM",
      "dateFinished": "Jul 12, 2018 8:05:31 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.where(\"ask \u003d \u0027欧莱雅护肤品好吗\u0027\").show()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 8:05:25 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+-------+-------+-----+\n|     ask|mainAns|clk_ugc|clk_o|\n+--------+-------+-------+-----+\n|欧莱雅护肤品好吗|     很好|    368|  984|\n+--------+-------+-------+-----+\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531395889076_-86102044",
      "id": "20180712-194449_527854852",
      "dateCreated": "Jul 12, 2018 7:44:49 PM",
      "dateStarted": "Jul 12, 2018 8:05:25 PM",
      "dateFinished": "Jul 12, 2018 8:05:25 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.where(\"clk_ugc \u003e 0\").count()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 8:01:20 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res155: Long \u003d 1990\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531396853750_1377273167",
      "id": "20180712-200053_1338630610",
      "dateCreated": "Jul 12, 2018 8:00:53 PM",
      "dateStarted": "Jul 12, 2018 8:01:20 PM",
      "dateFinished": "Jul 12, 2018 8:01:21 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.createOrReplaceTempView(\"sql_result\")\nsql_result \u003dsqlContext.sql(\"SELECT CONCAT(\u0027@query:\u0027,ask,\u0027\\t@mainAns:\u0027,mainAns,\u0027\\t@clk_ugc:\u0027,clk_ugc,\u0027\\t@clk_o:\u0027,clk_o) as line FROM sql_result\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 8:06:24 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sql_result: org.apache.spark.sql.DataFrame \u003d [line: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1531397036278_215932944",
      "id": "20180712-200356_66876918",
      "dateCreated": "Jul 12, 2018 8:03:56 PM",
      "dateStarted": "Jul 12, 2018 8:06:24 PM",
      "dateFinished": "Jul 12, 2018 8:06:25 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result.select(\"line\").rdd.saveAsTextFile(\"/user/webrank/liuqin/statistic/ask_mainAns_clk_ugc_201807.csv\")",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 8:07:56 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1531397225189_1498794691",
      "id": "20180712-200705_1166942747",
      "dateCreated": "Jul 12, 2018 8:07:05 PM",
      "dateStarted": "Jul 12, 2018 8:07:56 PM",
      "dateFinished": "Jul 12, 2018 8:07:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sql_result4.write.format(\"parquet\").save(\"/user/webrank/liuqin/statistic/query_clk_ugc_clk_o_201807.parquet\") ",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 7:03:39 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1531393405853_-226891662",
      "id": "20180712-190325_1427309608",
      "dateCreated": "Jul 12, 2018 7:03:25 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "sc.stop()",
      "user": "anonymous",
      "dateUpdated": "Jul 12, 2018 11:24:05 AM",
      "config": {
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "results": {},
        "enabled": true,
        "editorSetting": {
          "language": "scala"
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "jobName": "paragraph_1531279920318_1343243163",
      "id": "20180516-191133_1792986149",
      "dateCreated": "Jul 11, 2018 11:32:00 AM",
      "dateStarted": "Jul 12, 2018 11:24:05 AM",
      "dateFinished": "Jul 12, 2018 11:24:07 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1531365852801_1734074133",
      "id": "20180712-112412_359117437",
      "dateCreated": "Jul 12, 2018 11:24:12 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "medical/medical_eval",
  "id": "2DMVZ17NU",
  "angularObjects": {
    "2D9M8ATZ9:shared_process": [],
    "2D859SF5B:shared_process": [],
    "2D99W32FC:shared_process": [],
    "2D9NTGN5D::2DMVZ17NU": [],
    "2DA8NG9YB:shared_process": [],
    "2DBCA9BMV:shared_process": [],
    "2DA29EQ39:shared_process": [],
    "2D86PKHDE:shared_process": [],
    "2D8ZMX5FY:shared_process": [],
    "2D8ZFKME2:shared_process": [],
    "2DBAZD2WP:shared_process": [],
    "2D8SP4FH8:shared_process": [],
    "2DAESRJYD:shared_process": [],
    "2DA7377EZ:shared_process": [],
    "2D8DH9K51:shared_process": [],
    "2D85K8KV7:shared_process": [],
    "2D958F7RN:shared_process": [],
    "2DAVR7XRG:shared_process": [],
    "2DBX9FA55:shared_process": []
  },
  "config": {},
  "info": {}
}